#!/usr/bin/env php
<?php

error_reporting(E_ERROR | E_PARSE);

/* autoload */

include dirname(__DIR__) . '/vendor/autoload.php';

/* set command */

$command = new Commando\Command();
$command
	->option('e')
	->aka('api-endpoint')
	->describe('API endpoint (see: https://api.porn.com)')
	->default('/videos/find.json')
	->required()
	->option('p')
	->aka('api-parameter')
	->describe('API parameter (see: https://api.porn.com)')
	->option('r')
	->aka('image-resize')
	->describe('Resize the image')
	->default(0.5)
	->option('i')
	->aka('image-invert')
	->describe('Invert the image')
	->boolean()
	->option('w')
	->aka('image-weight')
	->describe('Weight of the image')
	->default(1)
	->option('d')
	->aka('image-dither')
	->describe('Dither of the image')
	->default(1)
	->boolean()
	->option('g')
	->aka('image-grayscale')
	->describe('Grayscale of the image')
	->boolean()
	->option('m')
	->aka('image-metadata')
	->describe('Metadata of the image')
	->boolean()
	->option('o')
	->aka('open-browser')
	->describe('Open URL in browser')
	->boolean();

/* handle content */

$url = 'https://api.porn.com' . $command['e'] . $command['p'];
$content = json_decode(file_get_contents($url));

/* randomize */

$total = count($content->result);
$result = $content->result{mt_rand(0, $total)};

/* handle image */

if ($result)
{
	$image = Pixeler\Pixeler::image($result->thumb, $command['r'], $command['i'], $command['w'], $command['d']);
	if ($command['g'])
	{
		$image->clearColors();
	}
	$output = $image;
	if ($command['m'])
	{
		if ($result->title)
		{
			$output .= 'Title: ' . $result->title . PHP_EOL;
		}
		if ($result->name)
		{
			$output .= 'Name: ' . $result->name . PHP_EOL;
		}
		if ($result->url)
		{
			$output .= 'URL: ' . $result->url . PHP_EOL;
			if ($command['o'])
			{
				exec('xdg-open ' . $result->url);
			}
		}
		if ($result->rating)
		{
			$output .= 'Rating: ' . $result->rating . PHP_EOL;
		}
		if ($result->duration)
		{
			$output .= 'Duration: ' . $result->duration . 's' . PHP_EOL;
		}
	}
	echo $output;
}
else
{
	$command->beepOnError();
}
